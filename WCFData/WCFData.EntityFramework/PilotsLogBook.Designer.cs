//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PilotsLogBook", "flight_actypeid_fk", "AcType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCFData.EntityFramework.AcType), "Flight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCFData.EntityFramework.Flight), true)]
[assembly: EdmRelationshipAttribute("PilotsLogBook", "flight_fromairfieldid_fk", "Airfield", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCFData.EntityFramework.Airfield), "Flight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCFData.EntityFramework.Flight), true)]
[assembly: EdmRelationshipAttribute("PilotsLogBook", "flight_toairfieldid_fk", "Airfield", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCFData.EntityFramework.Airfield), "Flight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCFData.EntityFramework.Flight), true)]
[assembly: EdmRelationshipAttribute("PilotsLogBook", "flight_capacity_fk", "Capacity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCFData.EntityFramework.Capacity), "Flight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCFData.EntityFramework.Flight), true)]

#endregion

namespace WCFData.EntityFramework
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PilotsLogBookContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PilotsLogBookContainer object using the connection string found in the 'PilotsLogBookContainer' section of the application configuration file.
        /// </summary>
        public PilotsLogBookContainer() : base("name=PilotsLogBookContainer", "PilotsLogBookContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PilotsLogBookContainer object.
        /// </summary>
        public PilotsLogBookContainer(string connectionString) : base(connectionString, "PilotsLogBookContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PilotsLogBookContainer object.
        /// </summary>
        public PilotsLogBookContainer(EntityConnection connection) : base(connection, "PilotsLogBookContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AcType> AcTypes
        {
            get
            {
                if ((_AcTypes == null))
                {
                    _AcTypes = base.CreateObjectSet<AcType>("AcTypes");
                }
                return _AcTypes;
            }
        }
        private ObjectSet<AcType> _AcTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Airfield> Airfields
        {
            get
            {
                if ((_Airfields == null))
                {
                    _Airfields = base.CreateObjectSet<Airfield>("Airfields");
                }
                return _Airfields;
            }
        }
        private ObjectSet<Airfield> _Airfields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Capacity> Capacities
        {
            get
            {
                if ((_Capacities == null))
                {
                    _Capacities = base.CreateObjectSet<Capacity>("Capacities");
                }
                return _Capacities;
            }
        }
        private ObjectSet<Capacity> _Capacities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Flight> Flights
        {
            get
            {
                if ((_Flights == null))
                {
                    _Flights = base.CreateObjectSet<Flight>("Flights");
                }
                return _Flights;
            }
        }
        private ObjectSet<Flight> _Flights;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AcTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAcTypes(AcType acType)
        {
            base.AddObject("AcTypes", acType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Airfields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAirfields(Airfield airfield)
        {
            base.AddObject("Airfields", airfield);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Capacities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapacities(Capacity capacity)
        {
            base.AddObject("Capacities", capacity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Flights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlights(Flight flight)
        {
            base.AddObject("Flights", flight);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PilotsLogBook", Name="AcType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AcType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AcType object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static AcType CreateAcType(global::System.Int64 id)
        {
            AcType acType = new AcType();
            acType.id = id;
            return acType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_actypeid_fk", "Flight")]
        public EntityCollection<Flight> Flights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flight>("PilotsLogBook.flight_actypeid_fk", "Flight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flight>("PilotsLogBook.flight_actypeid_fk", "Flight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PilotsLogBook", Name="Airfield")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Airfield : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Airfield object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Airfield CreateAirfield(global::System.Int64 id)
        {
            Airfield airfield = new Airfield();
            airfield.id = id;
            return airfield;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ICAOCode
        {
            get
            {
                return _ICAOCode;
            }
            set
            {
                OnICAOCodeChanging(value);
                ReportPropertyChanging("ICAOCode");
                _ICAOCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ICAOCode");
                OnICAOCodeChanged();
            }
        }
        private global::System.String _ICAOCode;
        partial void OnICAOCodeChanging(global::System.String value);
        partial void OnICAOCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_fromairfieldid_fk", "Flight")]
        public EntityCollection<Flight> Flights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flight>("PilotsLogBook.flight_fromairfieldid_fk", "Flight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flight>("PilotsLogBook.flight_fromairfieldid_fk", "Flight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_toairfieldid_fk", "Flight")]
        public EntityCollection<Flight> Flights1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flight>("PilotsLogBook.flight_toairfieldid_fk", "Flight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flight>("PilotsLogBook.flight_toairfieldid_fk", "Flight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PilotsLogBook", Name="Capacity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Capacity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Capacity object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Capacity CreateCapacity(global::System.Int64 id)
        {
            Capacity capacity = new Capacity();
            capacity.id = id;
            return capacity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_capacity_fk", "Flight")]
        public EntityCollection<Flight> Flights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flight>("PilotsLogBook.flight_capacity_fk", "Flight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flight>("PilotsLogBook.flight_capacity_fk", "Flight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PilotsLogBook", Name="Flight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Flight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Flight object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Flight CreateFlight(global::System.Int64 id)
        {
            Flight flight = new Flight();
            flight.Id = id;
            return flight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reg
        {
            get
            {
                return _Reg;
            }
            set
            {
                OnRegChanging(value);
                ReportPropertyChanging("Reg");
                _Reg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reg");
                OnRegChanged();
            }
        }
        private global::System.String _Reg;
        partial void OnRegChanging(global::System.String value);
        partial void OnRegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Depart
        {
            get
            {
                return _Depart;
            }
            set
            {
                OnDepartChanging(value);
                ReportPropertyChanging("Depart");
                _Depart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Depart");
                OnDepartChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Depart;
        partial void OnDepartChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnDepartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Captain
        {
            get
            {
                return _Captain;
            }
            set
            {
                OnCaptainChanging(value);
                ReportPropertyChanging("Captain");
                _Captain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Captain");
                OnCaptainChanged();
            }
        }
        private global::System.String _Captain;
        partial void OnCaptainChanging(global::System.String value);
        partial void OnCaptainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Arrival
        {
            get
            {
                return _Arrival;
            }
            set
            {
                OnArrivalChanging(value);
                ReportPropertyChanging("Arrival");
                _Arrival = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Arrival");
                OnArrivalChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Arrival;
        partial void OnArrivalChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnArrivalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AcTypeId
        {
            get
            {
                return _AcTypeId;
            }
            set
            {
                OnAcTypeIdChanging(value);
                ReportPropertyChanging("AcTypeId");
                _AcTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcTypeId");
                OnAcTypeIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AcTypeId;
        partial void OnAcTypeIdChanging(Nullable<global::System.Int64> value);
        partial void OnAcTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FromAirfieldId
        {
            get
            {
                return _FromAirfieldId;
            }
            set
            {
                OnFromAirfieldIdChanging(value);
                ReportPropertyChanging("FromAirfieldId");
                _FromAirfieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromAirfieldId");
                OnFromAirfieldIdChanged();
            }
        }
        private Nullable<global::System.Int64> _FromAirfieldId;
        partial void OnFromAirfieldIdChanging(Nullable<global::System.Int64> value);
        partial void OnFromAirfieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CapacityId
        {
            get
            {
                return _CapacityId;
            }
            set
            {
                OnCapacityIdChanging(value);
                ReportPropertyChanging("CapacityId");
                _CapacityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityId");
                OnCapacityIdChanged();
            }
        }
        private Nullable<global::System.Int64> _CapacityId;
        partial void OnCapacityIdChanging(Nullable<global::System.Int64> value);
        partial void OnCapacityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ToAirfieldId
        {
            get
            {
                return _ToAirfieldId;
            }
            set
            {
                OnToAirfieldIdChanging(value);
                ReportPropertyChanging("ToAirfieldId");
                _ToAirfieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToAirfieldId");
                OnToAirfieldIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ToAirfieldId;
        partial void OnToAirfieldIdChanging(Nullable<global::System.Int64> value);
        partial void OnToAirfieldIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_actypeid_fk", "AcType")]
        public AcType AcType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AcType>("PilotsLogBook.flight_actypeid_fk", "AcType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AcType>("PilotsLogBook.flight_actypeid_fk", "AcType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AcType> AcTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AcType>("PilotsLogBook.flight_actypeid_fk", "AcType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AcType>("PilotsLogBook.flight_actypeid_fk", "AcType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_fromairfieldid_fk", "Airfield")]
        public Airfield Airfield
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airfield>("PilotsLogBook.flight_fromairfieldid_fk", "Airfield").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airfield>("PilotsLogBook.flight_fromairfieldid_fk", "Airfield").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Airfield> AirfieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airfield>("PilotsLogBook.flight_fromairfieldid_fk", "Airfield");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Airfield>("PilotsLogBook.flight_fromairfieldid_fk", "Airfield", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_toairfieldid_fk", "Airfield")]
        public Airfield Airfield1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airfield>("PilotsLogBook.flight_toairfieldid_fk", "Airfield").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airfield>("PilotsLogBook.flight_toairfieldid_fk", "Airfield").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Airfield> Airfield1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airfield>("PilotsLogBook.flight_toairfieldid_fk", "Airfield");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Airfield>("PilotsLogBook.flight_toairfieldid_fk", "Airfield", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PilotsLogBook", "flight_capacity_fk", "Capacity")]
        public Capacity Capacity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Capacity>("PilotsLogBook.flight_capacity_fk", "Capacity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Capacity>("PilotsLogBook.flight_capacity_fk", "Capacity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Capacity> CapacityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Capacity>("PilotsLogBook.flight_capacity_fk", "Capacity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Capacity>("PilotsLogBook.flight_capacity_fk", "Capacity", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
